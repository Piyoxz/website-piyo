<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <title>Pengingat Piyo</title>
    <style>
      @media (max-width: 768px) {
        #reminderContainer {
          max-height: 550px; /* Atur tinggi maksimum sesuai kebutuhan */
          overflow-y: auto; /* Mengizinkan scroll jika konten melebihi tinggi maksimum */
        }
        #addReminderCard {
          margin-top: 20px; /* Memberikan jarak di atas untuk mobile */
        }
      }
      .fade-out {
        transition: opacity 0.5s ease;
        opacity: 0;
      }
    </style>
  </head>
  <body class="bg-gray-100">
    <div id="content" class="container mx-auto p-8">
      <h1 class="text-3xl font-bold text-center mb-8">Pengingat Piyo</h1>

      <!-- Grid untuk card dengan overflow pada perangkat mobile -->
      <div
        id="reminderContainer"
        class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6"
      >
        <!-- Konten reminder akan dimasukkan di sini -->
      </div>
    </div>

    <script>
      function goToAddReminder() {
        window.location.href = "/add";
      }

      const content = document.getElementById("content");
      const reminderContainer = document.getElementById("reminderContainer");

      async function deleteReminder(reminderId) {
        const confirmed = window.confirm(
          "Apakah Anda yakin ingin menghapus pengingat ini?"
        );

        if (confirmed) {
          try {
            const response = await fetch(`/delete`, {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                id: reminderId,
              }),
            });

            if (response.ok) {
              const reminderCard = document.getElementById(
                `reminder-${reminderId}`
              );

              // Menambahkan kelas fade-out sebelum menghapus
              reminderCard.classList.add("fade-out");

              // Menghapus elemen setelah animasi selesai
              setTimeout(() => {
                reminderCard.remove();
              }, 500); // Sesuaikan waktu dengan durasi transisi CSS
            } else {
              console.error("Gagal menghapus pengingat");
            }
          } catch (error) {
            console.error("Error menghapus pengingat:", error);
          }
        }
      }

      async function fetchReminders() {
        try {
          const response = await fetch("/reminders");
          const reminders = await response.json();

          reminderContainer.innerHTML = "";

          reminders.forEach((reminder) => {
            const reminderCard = document.createElement("div");
            reminderCard.className =
              "bg-white p-6 rounded-lg shadow-lg transition transform hover:scale-105 cursor-pointer relative";
            reminderCard.id = `reminder-${reminder.id}`;

            let dateInfo = "";
            if (reminder.date) {
              const reminderDate = new Date(reminder.date);
              const formattedDate = new Intl.DateTimeFormat("id-ID", {
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
              }).format(reminderDate);
              dateInfo = `<span class="font-semibold">Tanggal:</span> ${formattedDate}`;
            } else if (reminder.days && reminder.days.length > 0) {
              dateInfo = `<span class="font-semibold">Hari:</span> ${reminder.days.join(
                ", "
              )}`;
            }

            let timeOrIntervalInfo = "";
            if (reminder.time) {
              timeOrIntervalInfo = `<span class="font-semibold">Waktu:</span> ${reminder.time}`;
            } else if (reminder.interval) {
              timeOrIntervalInfo = `<span class="font-semibold">Interval:</span> Setiap ${reminder.interval} menit`;
            } else {
              timeOrIntervalInfo =
                "Tidak ada waktu atau interval yang ditentukan";
            }

            reminderCard.innerHTML = `
                        <h3 class="text-xl font-bold mb-3 text-blue-600">${reminder.title}</h3>
                        <p class="text-gray-700 mb-2">
                            ${dateInfo}
                        </p>
                        <p class="text-gray-700 mb-2">
                            ${timeOrIntervalInfo}
                        </p>
                        <button class="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-md" onclick="deleteReminder('${reminder.id}')">X</button>
                    `;

            reminderContainer.appendChild(reminderCard);
          });

          if (window.innerWidth < 600) {
            const addButton = document.createElement("div");
            addButton.id = "addReminderCard";
            addButton.className =
              "bg-gray-200 p-6 rounded-lg shadow-lg flex justify-center items-center cursor-pointer";
            addButton.innerHTML = `
            <svg
              xmlns=""
              class="h-10 w-10 text-gray-500"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
          `;
            addButton.onclick = () => {
              window.location.href = "/add";
            };
            content.appendChild(addButton);
          } else {
            const addButton = document.createElement("div");
            addButton.id = "addReminderCard";
            addButton.className =
              "bg-gray-200 p-6 rounded-lg shadow-lg flex justify-center items-center cursor-pointer";
            addButton.innerHTML = `
            <svg
              xmlns=""
              class="h-10 w-10 text-gray-500"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
          `;
            addButton.onclick = () => {
              window.location.href = "/add";
            };
            reminderContainer.appendChild(addButton);
          }
        } catch (error) {
          console.error("Gagal mengambil pengingat:", error);
        }
      }

      window.onload = fetchReminders;
    </script>
  </body>
</html>
